{
	"name": "adverb",
	"displayName": "adverb",
	"description": "Rename code symbols locally without changing the original source code. This makes it easier for you to read other people's source code and increases your productivity through the improved naming.",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.60.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:adverb.rename",
		"onView:adverb.renamings"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "adverb.rename",
				"title": "Rename single symbol (locally)",
				"category": "Adverb",
				"enablement": "config.adverb.enabled && editorLangId == javascript || editorLangId == typescript"
			},
			{
				"command": "adverb.renameAll",
				"title": "Rename all symbols (locally)",
				"category": "Adverb",
				"enablement": "config.adverb.enabled && editorLangId == javascript || editorLangId == typescript"
			},
			{
				"command": "adverb.refreshRenamings",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "adverb.editRenaming",
				"title": "Edit",
				"icon": {
					"light": "resources/light/edit.svg",
					"dark": "resources/dark/edit.svg"
				}
			},
			{
				"command": "adverb.deleteRenaming",
				"title": "Delete",
				"icon": {
					"light": "resources/light/trash.svg",
					"dark": "resources/dark/trash.svg"
				}
			}
		],
		"keybindings": [
			{
				"command": "adverb.rename",
				"key": "shift+f2",
				"when": "config.adverb.enabled && editorTextFocus && editorLangId == javascript || editorLangId == typescript"
			},
			{
				"command": "adverb.renameAll",
				"key": "ctrl+shift+f2",
				"when": "config.adverb.enabled && editorLangId == javascript || editorLangId == typescript"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "adverb.rename",
					"when": "config.adverb.enabled && editorLangId == javascript || editorLangId == typescript",
					"group": "Adverb"
				},
				{
					"command": "adverb.renameAll",
					"when": "config.adverb.enabled && editorLangId == javascript || editorLangId == typescript",
					"group": "Adverb"
				}
			],
			"editor/context": [
				{
					"command": "adverb.rename",
					"group": "1_modification",
					"when": "config.adverb.enabled && editorTextFocus && editorLangId == javascript || editorLangId == typescript"
				},
				{
					"command": "adverb.renameAll",
					"group": "1_modification",
					"when": "config.adverb.enabled && editorLangId == javascript || editorLangId == typescript"
				}
			],
			"view/title": [
				{
					"command": "adverb.refreshRenamings",
					"when": "view == adverb.renamings",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "adverb.editRenaming",
					"when": "view == adverb.renamings",
					"group": "inline"
				},
				{
					"command": "adverb.deleteRenaming",
					"when": "view == adverb.renamings",
					"group": "inline"
				}
			]
		},
		"views": {
			"explorer": [
				{
					"id": "adverb.renamings",
					"name": "Adverb: Renamings",
					"when": "config.adverb.enabled && config.adverb.treeViewEnabled"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "adverb.renamings",
				"contents": "No renamings found."
			}
		],
		"configuration": [
			{
				"title": "Adverb",
				"properties": {
					"adverb.enabled": {
						"type": "boolean",
						"description": "Renaming enabled",
						"default": true
					},
					"adverb.treeViewEnabled": {
						"type": "boolean",
						"description": "Tree view (sidebar) enabled",
						"default": true
					},
					"adverb.fontWeight": {
						"type": "string",
						"default": "inherit",
						"enum": [
							"inherit",
							"100",
							"200",
							"300",
							"400",
							"500",
							"600",
							"700",
							"800",
							"900"
						],
						"description": "Font weight CSS property of renaming"
					},
					"adverb.fontStyle": {
						"type": "string",
						"default": "inherit",
						"enum": [
							"normal",
							"italic",
							"inherit"
						],
						"description": "Font style CSS property of renaming"
					},
					"adverb.fontSize": {
						"type": "string",
						"default": "inherit",
						"description": "Font size CSS property of renaming"
					},
					"adverb.margin": {
						"type": "string",
						"default": "none",
						"description": "Margin CSS property of renaming"
					},
					"adverb.padding": {
						"type": "string",
						"default": "none",
						"description": "Padding CSS property of renaming"
					},
					"adverb.borderRadius": {
						"type": "string",
						"default": "none",
						"description": "Border radius CSS property of renaming"
					},
					"adverb.border": {
						"type": "string",
						"default": "none",
						"description": "Border CSS property of renaming"
					},
					"adverb.backgroundColor": {
						"type": "string",
						"default": "inherit",
						"description": "Background color CSS property of renaming"
					},
					"adverb.fontColor": {
						"type": "string",
						"default": "inherit",
						"description": "Font color CSS property of renaming"
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"lint": "eslint src --ext ts"
	},
	"devDependencies": {
		"@types/babel__generator": "^7.6.3",
		"@types/babel__traverse": "^7.14.2",
		"@types/node": "^16.10.3",
		"@types/vscode": "^1.60.0",
		"@typescript-eslint/eslint-plugin": "^4.33.0",
		"@typescript-eslint/parser": "^4.33.0",
		"eslint": "^7.27.0",
		"typescript": "^4.3.2"
	},
	"dependencies": {
		"@babel/parser": "^7.15.8",
		"@babel/traverse": "^7.15.4",
		"@babel/types": "^7.15.6",
		"recast": "^0.20.5"
	}
}